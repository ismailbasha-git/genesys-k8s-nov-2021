apiVersion: v1
kind: Pod
metadata:
  name: tomcat
  namespace: kul
  labels:
    app: tomcat
    version: "10.0.8"
spec:
  containers: # List of container in case of multi-container pod
    - name: tomcat
      image: kulbhushanmayer/tomcat:10.0.8
      ### To download or not to download the image before container creation
      imagePullPolicy: Always # else IfNotPresent # or Never
      resources: # will be used by containers so will be defined inside container definition
        requests: # minimum resources needed to schedule a pod on the node, 
          cpu: "125m"
          memory: "125Mi"
        limits: # maximum amount of resources that a container inside a pod will use and if it goes beyond this it will carsh the recreate 
          cpu: "250m"
          memory: "250Mi"
      env: # will be created inside the containers, so will be defined inside container definition
        - name: DB_PORT
          value: "3306"
        - name: QUEUE_MANAGER_URL
          value: https://queuemanager:23012
        - name: DATABASE
          valueFrom:
            configMapKeyRef: # value Specific key will be added to the ENVIONMENT variable defined above with the name DATABASE
              name: tomcat
              key: DB_NAME
        - name: DATABASE_PWD
          valueFrom:
            secretKeyRef: # value Specific key will be added to the ENVIONMENT variable defined above with the name DATABASE_PWD
              name: tomcat
              key: DB_PWD
      envFrom: # take environment values from other components
        - configMapRef: # from ConfigMap created, all keypairs will get added as ENVIRONMENT variables inside the container 
            name: tomcat
        - secretRef: # from Secret created, all keypairs will get added as ENVIRONMENT variables inside the container with values available in actual form
            name: tomcat
      volumeMounts:
        - name: env-properties # referring the volume to be used inside the container 
          mountPath: /properties # inside the container where data will be available
          readOnly: false
        - name: keypair
          mountPath: "/opt/app/.ssh"
          readOnly: true
  volumes: # defined volumes to be used inside containers
    - name: env-properties
      configMap: # using data inside the configMap to be converted in the files
        name: tomcat-envs
        items:
          - key: qa.properties
            path: qa.properties
          - key: prod.properties
            path: prod.properties
    - name: keypair
      secret: # using Secret as volume to be used inside the container
        secretName: keypair
